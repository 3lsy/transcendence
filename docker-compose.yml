networks:
    transcendence-network:
        name: transcendence-network

volumes:
  grafana-data:
    name: grafana-data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/grafana-data

  prometheus-data:
    name: prometheus-data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/prometheus-data
  
  vault-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/vault-data
  
  elasticsearch-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/elasticsearch-data
  
  logstash-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/logstash-data

services:
  # frontend:
  #   build: ./services/frontend
  #   image: frontend-tc
  #   container_name: frontend
  #   hostname: frontend
  #   restart: unless-stopped
  #   networks:
  #     - transcendence-network
  grafana:
    build: ./services/monitoring/grafana
    image: grafana-tc
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    networks:
      - transcendence-network
    ports:
      - "3000:3000"  # Grafana web interface
    volumes:
      - grafana-data:/var/lib/grafana
      - ./services/monitoring/grafana/conf/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./services/monitoring/grafana/certs:/etc/grafana/certs:ro

  prometheus:
    build: ./services/monitoring/prometheus
    image: prometheus-tc
    container_name: prometheus
    hostname: prometheus
    restart: unless-stopped
    networks:
      - transcendence-network
    ports:
      - "9090:9090"  # Prometheus web interface
    volumes:
      - prometheus-data:/prometheus
      - ./services/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./services/monitoring/prometheus/rules.yml:/etc/prometheus/rules.yml:ro
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    networks:
      - transcendence-network
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  vault:
    build: ./services/vault
    image: vault-tc
    container_name: vault
    hostname: vault
    restart: unless-stopped
    networks:
      - transcendence-network
    ports:
      - "8200:8200"
    volumes:
      - vault-data:/vault/data
      - ./services/vault/conf/config.hcl:/vault/config/config.hcl:ro
  
  rproxy:
    build: ./services/rproxy
    image: rproxy-tc
    container_name: rproxy
    hostname: rproxy
    restart: unless-stopped
    networks:
      - transcendence-network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./services/rproxy/conf/redirect.conf:/etc/httpd/conf.d/redirect.conf:ro

  elasticsearch:
    build: ./services/logs-management/elasticsearch
    image: elasticsearch-tc
    container_name: elasticsearch
    hostname: elasticsearch
    restart: unless-stopped
    networks:
      - transcendence-network
    ports:
      - "9200:9200"  # Elasticsearch HTTP API
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
      - ./services/logs-management/elasticsearch/certs/elasticsearch.key:/etc/elasticsearch/elasticsearch.key:ro
      - ./services/logs-management/elasticsearch/certs/elasticsearch.crt:/etc/elasticsearch/elasticsearch.crt:ro

  logstash:
    build: ./services/logs-management/logstash
    image: logstash-tc
    container_name: logstash
    hostname: logstash
    restart: unless-stopped
    networks:
      - transcendence-network
    ports:
      - "5044:5044"  # Logstash Beats input
      - "9600:9600"  # Logstash monitoring API
    volumes:
      - logstash-data:/usr/share/logstash/data
      - ./services/logs-management/logstash/pipelines:/usr/share/logstash/pipeline:ro
