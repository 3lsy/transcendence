networks:
    transcendence-network:
        name: transcendence-network

volumes:
  grafana-data:
    name: grafana-data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/grafana-data

  prometheus-data:
    name: prometheus-data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/prometheus-data
  
  vault-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/vault-data
  
  elasticsearch-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/elasticsearch-data
  
  kibana-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/kibana-data

  logstash-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/logstash-data

  logstash-config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/logstash-config

  scoreboard-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/scoreboard-data

services:

  # Backend Microservices

  game-service:
    build: ./services/website/backend/game-service
    image: game-service-tc
    container_name: game-service
    hostname: game-service
    restart: unless-stopped
    networks:
      - transcendence-network
    # ports:
    #   - "3601:3601"  # Game service API

  scoreboard-service:
    build: ./services/website/backend/scoreboard-service
    image: scoreboard-service-tc
    container_name: scoreboard-service
    hostname: scoreboard-service
    restart: unless-stopped
    networks:
      - transcendence-network
    # ports:
    #   - "3602:3602"  # Scoreboard service API
    volumes:
      - scoreboard-data:/app/data

  tournament-service:
    build: ./services/website/backend/tournament-service
    image: tournament-service-tc
    container_name: tournament-service
    hostname: tournament-service
    restart: unless-stopped
    networks:
      - transcendence-network
    # ports:
    #   - "3603:3603"  # Tournament service API
  
  frontend:
    build: ./services/website/frontend
    image: frontend-tc
    container_name: frontend
    hostname: frontend
    restart: unless-stopped
    networks:
      - transcendence-network
    # ports:
    #   - "3000:80"  # Frontend web interface
    depends_on:
      - game-service
      - scoreboard-service
      - tournament-service
  
  grafana:
    build: ./services/monitoring/grafana
    image: grafana-tc
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    networks:
      - transcendence-network
    #ports:
    #  - "3000:3000"  # Grafana web interface
    volumes:
      - grafana-data:/var/lib/grafana
      - ./services/monitoring/grafana/conf/cAdvisor.json:/var/lib/grafana/dashboards/cAdvisor.json:ro
      - ./services/monitoring/grafana/conf/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./services/monitoring/grafana/certs:/etc/grafana/certs:ro
    depends_on:
      - vault
      - prometheus
      - cadvisor

  prometheus:
    build: ./services/monitoring/prometheus
    image: prometheus-tc
    container_name: prometheus
    hostname: prometheus
    restart: unless-stopped
    networks:
      - transcendence-network
    #ports:
    #  - "9090:9090"  # Prometheus web interface
    volumes:
      - prometheus-data:/prometheus
      - ./services/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./services/monitoring/prometheus/rules.yml:/etc/prometheus/rules.yml:ro
    depends_on:
      - cadvisor
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    networks:
      - transcendence-network
    #ports:
    #  - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  vault:
    build: ./services/vault
    image: vault-tc
    container_name: vault
    hostname: vault
    restart: unless-stopped
    networks:
      - transcendence-network
    #ports:
    #  - "8200:8200"
    volumes:
      - vault-data:/vault/data
      - ./services/vault/conf/config.hcl:/vault/config/config.hcl:ro
      - ./services/vault/certs:/vault/certs:ro
  
  rproxy:
    build: ./services/rproxy
    image: rproxy-tc
    container_name: rproxy
    hostname: rproxy
    restart: unless-stopped
    networks:
      - transcendence-network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./services/rproxy/conf/redirect.conf:/etc/httpd/conf.d/redirect.conf:ro
      - ./services/rproxy/certs:/etc/pki/tls/certs:ro
    depends_on:
      # - grafana
      # - prometheus
      # - vault
      # - elasticsearch
      # - kibana
      # - logstash
      - frontend
      - game-service
      - scoreboard-service
      - tournament-service

  elasticsearch:
    build: ./services/logs-management/elasticsearch
    image: elasticsearch-tc
    container_name: elasticsearch
    hostname: elasticsearch
    restart: unless-stopped
    networks:
      - transcendence-network
    ports:
      - "9200:9200"  # Elasticsearch API
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
      - ./services/logs-management/elasticsearch/certs/elasticsearch.key:/etc/elasticsearch/elasticsearch.key:ro
      - ./services/logs-management/elasticsearch/certs/elasticsearch.crt:/etc/elasticsearch/elasticsearch.crt:ro
      - ./services/logs-management/elasticsearch/certs/elasticsearch.p12:/etc/elasticsearch/elasticsearch.p12:ro
    depends_on:
      - vault

  kibana:
    build: ./services/logs-management/kibana
    image: kibana-tc
    container_name: kibana
    hostname: kibana
    restart: unless-stopped
    networks:
      - transcendence-network
    #ports:
    #  - "5601:5601"  # Kibana web interface
    volumes:
      - kibana-data:/usr/share/kibana/data
      - ./services/logs-management/kibana/certs/kibana.crt:/etc/kibana/kibana.crt:ro
      - ./services/logs-management/kibana/certs/kibana.key:/etc/kibana/kibana.key:ro
    depends_on:
      - elasticsearch
      - vault

  logstash:
    build: ./services/logs-management/logstash
    image: logstash-tc
    container_name: logstash
    hostname: logstash
    restart: unless-stopped
    networks:
      - transcendence-network
    #ports:
    #  - "5044:5044"  # Logstash Filebeats input
    #  - "9600:9600"  # Logstash monitoring API
    volumes:
      - logstash-data:/usr/share/logstash/data
      - logstash-config:/usr/share/logstash/config
      - ./services/logs-management/logstash/pipelines:/usr/share/logstash/pipeline:ro
      - ./services/logs-management/logstash/certs/logstash.crt:/etc/logstash/logstash.crt:ro
      - ./services/logs-management/logstash/certs/logstash.key:/etc/logstash/logstash.key:ro
    depends_on:
      - elasticsearch
      - kibana
      - vault