ServerName rproxy.localhost
SSLSessionCache shmcb:/run/httpd/sslcache(512000)
SSLSessionCacheTimeout 300

SSLCertificateFile /etc/pki/tls/certs/rproxy.crt
SSLCertificateKeyFile /etc/pki/tls/certs/rproxy.key
Listen 443 https


# Redirect HTTP to HTTPS
<VirtualHost *:80>
    ServerName localhost
    ServerAlias transcendence.localhost pong.localhost grafana.localhost prometheus.localhost vault.localhost elastic.localhost kibana.localhost cadvisor.localhost api-gateway.localhost

    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule ^/(.*) https://%{HTTP_HOST}/$1 [R=301,L]

</VirtualHost>

<VirtualHost *:443>
    ServerName transcendence.localhost
    ServerAlias pong.localhost

    SSLEngine on
    SSLCertificateFile /etc/pki/tls/certs/rproxy.crt
    SSLCertificateKeyFile /etc/pki/tls/certs/rproxy.key
    SSLProtocol TLSv1.2 TLSv1.3

    ProxyPreserveHost On
    ProxyPass / http://frontend:80/
    ProxyPassReverse / http://frontend:80/

    RequestHeader set X-Forwarded-For %{REMOTE_ADDR}s
    RequestHeader set Host %{HTTP_HOST}s

    SSLProxyEngine on
    SSLProxyVerify none
    SSLProxyCheckPeerCN off
    SSLProxyCheckPeerName off
    SSLProxyCheckPeerExpire off
</VirtualHost>

<VirtualHost *:443>
    ServerName grafana.localhost

    SSLEngine on
    SSLCertificateFile /etc/pki/tls/certs/rproxy.crt
    SSLCertificateKeyFile /etc/pki/tls/certs/rproxy.key
    SSLProtocol TLSv1.2 TLSv1.3

    ProxyPreserveHost On
    ProxyPass / https://grafana:3000/
    ProxyPassReverse / https://grafana:3000/

    RequestHeader set X-Forwarded-For %{REMOTE_ADDR}s
    RequestHeader set Host %{HTTP_HOST}s

    SSLProxyEngine on
    SSLProxyVerify none
    SSLProxyCheckPeerCN off
    SSLProxyCheckPeerName off
    SSLProxyCheckPeerExpire off
</VirtualHost>

<VirtualHost *:443>
    ServerName prometheus.localhost

    SSLEngine on
    SSLCertificateFile /etc/pki/tls/certs/rproxy.crt
    SSLCertificateKeyFile /etc/pki/tls/certs/rproxy.key
    SSLProtocol TLSv1.2 TLSv1.3

    ProxyPreserveHost On
    ProxyPass / http://prometheus:9090/
    ProxyPassReverse / http://prometheus:9090/

    RequestHeader set X-Forwarded-For %{REMOTE_ADDR}s
    RequestHeader set Host %{HTTP_HOST}s
</VirtualHost>

<VirtualHost *:443>
    ServerName vault.localhost

    SSLEngine on
    SSLCertificateFile /etc/pki/tls/certs/rproxy.crt
    SSLCertificateKeyFile /etc/pki/tls/certs/rproxy.key
    SSLProtocol TLSv1.2 TLSv1.3

    ProxyPreserveHost On
    ProxyPass / https://vault:8200/
    ProxyPassReverse / https://vault:8200/

    RequestHeader set X-Forwarded-For %{REMOTE_ADDR}s
    RequestHeader set Host %{HTTP_HOST}s

    SSLProxyEngine on
    SSLProxyVerify none
    SSLProxyCheckPeerCN off
    SSLProxyCheckPeerName off
    SSLProxyCheckPeerExpire off
</VirtualHost>

<VirtualHost *:443>
    ServerName elastic.localhost
    ServerAlias kibana.localhost

    SSLEngine on
    SSLCertificateFile /etc/pki/tls/certs/rproxy.crt
    SSLCertificateKeyFile /etc/pki/tls/certs/rproxy.key
    SSLProtocol TLSv1.2 TLSv1.3

    ProxyPreserveHost On
    ProxyPass / https://kibana:5601/
    ProxyPassReverse / https://kibana:5601/

    RequestHeader set X-Forwarded-For %{REMOTE_ADDR}s
    RequestHeader set Host %{HTTP_HOST}s

    SSLProxyEngine on
    SSLProxyVerify none
    SSLProxyCheckPeerCN off
    SSLProxyCheckPeerName off
    SSLProxyCheckPeerExpire off
</VirtualHost>

<VirtualHost *:443>
    ServerName cadvisor.localhost

    SSLEngine on
    SSLCertificateFile /etc/pki/tls/certs/rproxy.crt
    SSLCertificateKeyFile /etc/pki/tls/certs/rproxy.key
    SSLProtocol TLSv1.2 TLSv1.3

    ProxyPreserveHost On
    ProxyPass / http://cadvisor:8080/
    ProxyPassReverse / http://cadvisor:8080/

    RequestHeader set X-Forwarded-For %{REMOTE_ADDR}s
    RequestHeader set Host %{HTTP_HOST}s

    SSLProxyEngine on
    SSLProxyVerify none
    SSLProxyCheckPeerCN off
    SSLProxyCheckPeerName off
    SSLProxyCheckPeerExpire off
</VirtualHost>

# API Gateway Configuration
<VirtualHost *:443>
    ServerName api-gateway.localhost

    SSLEngine on
    SSLCertificateFile /etc/pki/tls/certs/rproxy.crt
    SSLCertificateKeyFile /etc/pki/tls/certs/rproxy.key
    SSLProtocol TLSv1.2 TLSv1.3

    # Preserve Host and client IP
    ProxyPreserveHost On
    RequestHeader set X-Real-IP %{REMOTE_ADDR}s
    RequestHeader set X-Forwarded-For %{REMOTE_ADDR}s
    RequestHeader set X-Forwarded-Proto "https"
    RequestHeader set X-Forwarded-Port "443"

    # Required for WebSockets
    ProxyRequests Off

    # GAME (WebSocket first, then HTTP fallback)
    ProxyPassMatch ^/game/(.*) ws://game-service:3601/$1 nocanon retry=0
    ProxyPassReverse /game/ ws://game-service:3601/
    ProxyPass /game/ http://game-service:3601/ nocanon retry=0
    ProxyPassReverse /game/ http://game-service:3601/

    # Disable buffering for real-time
    SetEnv proxy-sendchunked 1
    SetEnv proxy-initial-not-pooled 1

    # Redirect /game to /game/
    RedirectMatch 301 ^/game$ /game/

    # SCOREBOARD
    RedirectMatch 301 ^/scoreboard$ /scoreboard/
    ProxyPass /scoreboard/ http://scoreboard-service:3602/ nocanon retry=0
    ProxyPassReverse /scoreboard/ http://scoreboard-service:3602/

    # TOURNAMENT
    RedirectMatch 301 ^/tournament$ /tournament/
    ProxyPass /tournament/ http://tournament-service:3603/ nocanon retry=0
    ProxyPassReverse /tournament/ http://tournament-service:3603/
    
    # Default 404 for anything else
    <LocationMatch "^/(?!game/|scoreboard/|tournament/)">
        Require all denied
        ErrorDocument 403 /custom_404.html
    </LocationMatch>
</VirtualHost>
